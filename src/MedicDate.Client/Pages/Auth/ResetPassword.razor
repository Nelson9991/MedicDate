@page "/usuario/resetPassword"
@using MedicDate.Shared.Models.Auth
@inject IHttpRepository _httpRepo
@inject NavigationManager _navigationManager
@inject INotificationService _notificationService

<h2 class="text-radzen-primary">Restablece tu contraseña</h2>
<RadzenCard>
	<EditForm Model="@_resetPasswordModel" OnValidSubmit="OnSubmit">
		<DataAnnotationsValidator />

		<div class="row mb-3">
			<RadzenLabel Text="Ingrese su email" />
			<div class="mt-1">
				<RadzenTextBox @bind-Value="_resetPasswordModel.Email" class="w-100" />
				<ValidationMessage For="() => _resetPasswordModel.Email" />
			</div>
		</div>
		<div class="row mb-3">
			<RadzenLabel Text="Contraseña" />
			<div class="mt-1">
				<RadzenPassword @bind-Value="_resetPasswordModel.Password" class="w-100" />
				<ValidationMessage For="() => _resetPasswordModel.Password" />
			</div>
		</div>
		<div class="row mb-3">
			<RadzenLabel Text="Confirme su contraseña" />
			<div class="mt-1">
				<RadzenPassword @bind-Value="_resetPasswordModel.ConfirmPassword" class="w-100" />
				<ValidationMessage For="() => _resetPasswordModel.ConfirmPassword" />
			</div>
		</div>

		<div class="mb-2">
			<RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Secondary"
				Text="Restablecer Contraseña" Icon="save" />
		</div>
	</EditForm>

</RadzenCard>

@code {

    private string? _code;

    private readonly ResetPasswordDto _resetPasswordModel = new();

    protected override void OnInitialized()
    {
        _navigationManager.TryGetQueryString("code", out _code);
        _code = _code?.Replace(' ', '+') ?? "";
    }

    private async Task OnSubmit()
    {
        _resetPasswordModel.Code = _code;

        var httpResp = await _httpRepo.Post("api/Account/resetPassword", _resetPasswordModel);

        if (!httpResp.Error)
        {
            _navigationManager.NavigateTo("/usuario/resetPasswordConfirm");
        }
    }

}
