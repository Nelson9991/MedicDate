@typeparam TItem
@inject IHttpRepository _httpRepository
@inject DialogService _dialogService
@inject INotificationService _notificationService

@if (AllowCrudOps.AlowAdd)
{
    <div class="mb-2 row">
        <div class="col-12 text-end">
            <NavLink Match="@NavLinkMatch.Prefix" href="@OpRoutes.AddUrl">
                <RadzenButton Text="Agregar" Icon="add" />
            </NavLink>
        </div>
    </div>
}

@if (ItemList is null)
{
    if (NullItemList is not null)
    {
        @NullItemList
    }
    else
    {
        <p>Cargando...</p>
    }
}
else
{
    <div class="my-3">
        <RadzenDataGrid @ref="_dataGrid" Count="@TotalCount" Data="@ItemList"
                    LoadData="@((e) => LoadData(e, _dataGrid.CurrentPage))" AllowFiltering="@AllowFilter"
                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="@FilterMode" AllowPaging="true"
                    LogicalFilterOperator="LogicalFilterOperator.Or" PageSize="@_pageSize" EmptyText="No hay datos que mostrar"
                    AllowSorting="true" PagerPosition="PagerPosition.TopAndBottom"
                    TItem="TItem" AllowColumnResize="AllowColumnResize">
            <Columns>

                @if (CustomGridCols is null)
                {
                    var i = 0;

                    @foreach (var propiedad in PropNames)
                    {
                        <RadzenDataGridColumn TItem="TItem" Property="@propiedad" Title="@Headers[i]" />
                        i++;
                    }
                }
                else
                {
                    @CustomGridCols
                }
                @if (AllowCrudOps.AllowEdit)
                {
                    <RadzenDataGridColumn TItem="TItem" Context="item" Filterable="false" Sortable="false"
                                  TextAlign="@TextAlign.Center" Width="70px">
                        <Template>
                            <NavLink Match="@NavLinkMatch.Prefix"
                             href="@($"{OpRoutes.EditUrl}/{item.GetType().GetProperties()[0].GetValue(item)}")">
                                <RadzenButton Icon="edit" ButtonStyle="@ButtonStyle.Secondary"></RadzenButton>
                            </NavLink>
                        </Template>
                    </RadzenDataGridColumn>
                }
                @if (AllowCrudOps.AllowDelete)
                {
                    <RadzenDataGridColumn TItem="TItem" Context="item" Filterable="false" Sortable="false"
                                  TextAlign="@TextAlign.Center" Width="70px">
                        <Template>
                            <RadzenButton Icon="delete" ButtonStyle="@ButtonStyle.Danger"
                                  Click="@(() => _dialogService.OpenAsync<DeleteConfirmation>("Borrar Registro", new Dictionary<string, object>() {{"Id", item.GetType().GetProperties()[0].GetValue(item)?.ToString()}, {"OnDelete", OnDeleteData}}, new DialogOptions() {Width = "355px", Height = "184px"}))" />
                        </Template>
                    </RadzenDataGridColumn>
                }
            </Columns>
        </RadzenDataGrid>
    </div>
}

